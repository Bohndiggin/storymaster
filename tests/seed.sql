DROP TABLE IF EXISTS public."user", public.lorekeeper_group, public.object_, public.project, public.project_to_group CASCADE;
DROP TABLE IF EXISTS public.race, public.skills, public.sub_race, public.world_data, public.background, public."class" CASCADE;
DROP TABLE IF EXISTS public.faction, public.faction_a_on_b_relations, public.history, public.history_faction, public.history_object CASCADE;
DROP TABLE IF EXISTS public.history_world_data, public.litography_arc, public.litography_node, public.litography_notes CASCADE;
DROP TABLE IF EXISTS public.litography_plot, public.litography_plot_section, public.location_, public.location_city, public.location_city_districts CASCADE;
DROP TABLE IF EXISTS public.location_dungeon, public.location_flora_fauna, public.location_to_faction, public.actor, public.actor_a_on_b_relations CASCADE;
DROP TABLE IF EXISTS public.actor_to_skills, public.arc_to_actor, public.arc_to_node, public.faction_members, public.history_actor CASCADE;
DROP TABLE IF EXISTS public.history_location, public.litography_node_to_plot_section, public.litography_note_to_actor, public.litography_note_to_background CASCADE;
DROP TABLE IF EXISTS public.litography_note_to_faction, public.litography_note_to_history, public.litography_note_to_location, public.litography_note_to_object CASCADE;
DROP TABLE IF EXISTS public.litography_note_to_world_data, public.object_to_owner, public.residents CASCADE;

CREATE TABLE public."user" (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username varchar NOT NULL,
	CONSTRAINT user_pk PRIMARY KEY (id)
);

CREATE TABLE public.lorekeeper_group (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar NULL,
	description text NULL,
    user_id int4 NOT NULL,
	CONSTRAINT lorekeeper_group_pk PRIMARY KEY (id),
	CONSTRAINT user_id FOREIGN KEY (user_id) REFERENCES public."user"(id)
);

CREATE TABLE public.object_ (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	object_name varchar(255) NULL,
	object_description text NULL,
	object_value int4 NULL,
	rarity varchar(255) NULL,
	group_id int4 NULL,
	CONSTRAINT object__pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.project (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar NULL,
	description text NULL,
	user_id int4 NOT NULL,
	CONSTRAINT project_pk PRIMARY KEY (id),
	CONSTRAINT user_id FOREIGN KEY (id) REFERENCES public."user"(id)
);

CREATE TABLE public.project_to_group (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	project_id int4 NOT NULL,
	group_id int4 NOT NULL,
	CONSTRAINT project_to_group_pk PRIMARY KEY (id),
	CONSTRAINT project_to_group_lorekeeper_group_fk FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT project_to_group_project_fk FOREIGN KEY (project_id) REFERENCES public.project(id)
);

CREATE TABLE public.race (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	race_name varchar(255) NULL,
	race_description text NULL,
	group_id int4 NULL,
	CONSTRAINT race_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.skills (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	skill_name varchar(255) NULL,
	skill_description text NULL,
	skill_trait varchar(255) NULL,
	group_id int4 NULL,
	CONSTRAINT skills_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.sub_race (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	parent_race_id int4 NULL,
	sub_race_name varchar(255) NULL,
	sub_race_description text NULL,
	group_id int4 NULL,
	CONSTRAINT sub_race_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT parent_race_id FOREIGN KEY (parent_race_id) REFERENCES public.race(id)
);

CREATE TABLE public.world_data (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	data_name varchar(255) NULL,
	data_description text NULL,
	group_id int4 NULL,
	CONSTRAINT world_data_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.background (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	background_name varchar(255) NULL,
	background_description text NULL,
	group_id int4 NULL,
	CONSTRAINT background_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public."class" (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	class_name varchar(255) NULL,
	class_description text NULL,
	group_id int4 NULL,
	CONSTRAINT class_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.faction (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	faction_name varchar(255) NULL,
	faction_description text NULL,
	goals text NULL,
	faction_values text NULL,
	faction_income_sources text NULL,
	faction_expenses text NULL,
	group_id int4 NULL,
	CONSTRAINT faction_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.faction_a_on_b_relations (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	faction_a_id int4 NULL,
	faction_b_id int4 NULL,
	overall text NULL,
	economically text NULL,
	politically text NULL,
	opinion text NULL,
	group_id int4 NULL,
	CONSTRAINT faction_a_on_b_relations_pkey PRIMARY KEY (id),
	CONSTRAINT faction_a_id FOREIGN KEY (faction_a_id) REFERENCES public.faction(id),
	CONSTRAINT faction_b_id FOREIGN KEY (faction_b_id) REFERENCES public.faction(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.history (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	event_name varchar(255) NULL,
	event_year int4 NULL,
	event_description text NULL,
	group_id int4 NULL,
	CONSTRAINT history_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.history_faction (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	history_id int4 NULL,
	faction_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT history_faction_pkey PRIMARY KEY (id),
	CONSTRAINT faction_id FOREIGN KEY (faction_id) REFERENCES public.faction(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT history_id FOREIGN KEY (history_id) REFERENCES public.history(id)
);

CREATE TABLE public.history_object (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	history_id int4 NULL,
	object_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT history_object_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT history_id FOREIGN KEY (history_id) REFERENCES public.history(id),
	CONSTRAINT object_id FOREIGN KEY (object_id) REFERENCES public.object_(id)
);

CREATE TABLE public.history_world_data (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	history_id int4 NULL,
	world_data_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT history_world_data_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT history_id FOREIGN KEY (history_id) REFERENCES public.history(id),
	CONSTRAINT world_data_id FOREIGN KEY (world_data_id) REFERENCES public.world_data(id)
);

CREATE TABLE public.litography_arc (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	project_id int4 NOT NULL,
	CONSTRAINT litography_arc_pk PRIMARY KEY (id),
	CONSTRAINT litography_arc_project_fk FOREIGN KEY (project_id) REFERENCES public.project(id)
);

CREATE TABLE public.litography_node (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	node_type varchar NOT NULL,
	node_height float8 NOT NULL,
	previous_node int4 NULL,
	next_node int4 NULL,
	project_id int4 NOT NULL,
	CONSTRAINT litography_node_pk PRIMARY KEY (id),
	CONSTRAINT project_id FOREIGN KEY (project_id) REFERENCES public.project(id)
);

CREATE TABLE public.litography_notes (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar NULL,
	description text NULL,
	note_type varchar NOT NULL,
	project_id int4 NOT NULL,
	linked_node int4 NOT NULL,
	CONSTRAINT litography_notes_pk PRIMARY KEY (id),
	CONSTRAINT linked_node FOREIGN KEY (linked_node) REFERENCES public.litography_node(id),
	CONSTRAINT litography_notes_project_fk FOREIGN KEY (project_id) REFERENCES public.project(id)
);

CREATE TABLE public.litography_plot (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title varchar(250) NOT NULL,
	description text NULL,
	project_id int4 NOT NULL,
	CONSTRAINT litography_plot_pk PRIMARY KEY (id),
	CONSTRAINT project_id FOREIGN KEY (project_id) REFERENCES public.project(id)
);

CREATE TABLE public.litography_plot_section (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	plot_section_type varchar NOT NULL,
	plot_id int4 NOT NULL,
	CONSTRAINT litography_plot_section_pk PRIMARY KEY (id),
	CONSTRAINT litography_plot_id FOREIGN KEY (plot_id) REFERENCES public.litography_plot(id)
);

CREATE TABLE public.location_ (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_name varchar(255) NULL,
	location_type varchar(255) NULL,
	location_description text NULL,
	sights text NULL,
	smells text NULL,
	sounds text NULL,
	feels text NULL,
	tastes text NULL,
	coordinates varchar(255) NULL,
	group_id int4 NULL,
	CONSTRAINT location__pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.location_city (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_id int4 NULL,
	government text NULL,
	group_id int4 NULL,
	CONSTRAINT location_city_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.location_city_districts (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_id int4 NULL,
	district_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT location_city_districts_pkey PRIMARY KEY (id),
	CONSTRAINT district_id FOREIGN KEY (district_id) REFERENCES public.location_(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.location_dungeon (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_id int4 NULL,
	dangers text NULL,
	traps text NULL,
	secrets text NULL,
	group_id int4 NULL,
	CONSTRAINT location_dungeon_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.location_flora_fauna (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_id int4 NULL,
	living_name varchar(255) NULL,
	living_description text NULL,
	living_type text NULL,
	group_id int4 NULL,
	CONSTRAINT location_flora_fauna_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.location_to_faction (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	location_id int4 NULL,
	faction_id int4 NULL,
	faction_presence float8 NULL,
	faction_power float8 NULL,
	notes text NULL,
	group_id int4 NULL,
	CONSTRAINT location_to_faction_pkey PRIMARY KEY (id),
	CONSTRAINT faction_id FOREIGN KEY (faction_id) REFERENCES public.faction(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.actor (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	first_name text NULL,
	middle_name text NULL,
	last_name text NULL,
	title text NULL,
	actor_age int4 NULL,
	class_id int4 NULL,
	actor_level int4 NULL,
	background_id int4 NULL,
	job text NULL,
	actor_role text NULL,
	race_id int4 NULL,
	sub_race_id int4 NULL,
	alignment varchar(2) NULL,
	strength int4 NULL,
	dexterity int4 NULL,
	constitution int4 NULL,
	intelligence int4 NULL,
	wisdom int4 NULL,
	charisma int4 NULL,
	ideal text NULL,
	bond text NULL,
	flaw text NULL,
	appearance text NULL,
	strengths text NULL,
	weaknesses text NULL,
	notes text NULL,
	group_id int4 NULL,
	CONSTRAINT actor_pkey PRIMARY KEY (id),
	CONSTRAINT background_id FOREIGN KEY (background_id) REFERENCES public.background(id),
	CONSTRAINT class_id FOREIGN KEY (class_id) REFERENCES public."class"(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT race_id FOREIGN KEY (race_id) REFERENCES public.race(id),
	CONSTRAINT sub_race_id FOREIGN KEY (sub_race_id) REFERENCES public.sub_race(id)
);

CREATE TABLE public.actor_a_on_b_relations (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	actor_a_id int4 NULL,
	actor_b_id int4 NULL,
	overall text NULL,
	economically text NULL,
	power_dynamic text NULL,
	group_id int4 NULL,
	CONSTRAINT actor_a_on_b_relations_pkey PRIMARY KEY (id),
	CONSTRAINT actor_a_id FOREIGN KEY (actor_a_id) REFERENCES public.actor(id),
	CONSTRAINT actor_b_id FOREIGN KEY (actor_b_id) REFERENCES public.actor(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.actor_to_skills (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	actor_id int4 NULL,
	skill_id int4 NULL,
	skill_level int4 NULL,
	group_id int4 NULL,
	CONSTRAINT actor_to_skills_pkey PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT skill_id FOREIGN KEY (skill_id) REFERENCES public.skills(id)
);

CREATE TABLE public.arc_to_actor (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	actor_id int4 NOT NULL,
	arc_id int4 NOT NULL,
	CONSTRAINT arc_to_actor_pk PRIMARY KEY (id),
	CONSTRAINT arc_to_actor_actor_fk FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT arc_to_actor_litography_arc_fk FOREIGN KEY (arc_id) REFERENCES public.litography_arc(id)
);

CREATE TABLE public.arc_to_node (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	arc_id int4 NOT NULL,
	node_id int4 NOT NULL,
	CONSTRAINT litography_node_to_arc_pk PRIMARY KEY (id),
	CONSTRAINT litography_node_to_arc_litography_arc_fk FOREIGN KEY (arc_id) REFERENCES public.litography_arc(id),
	CONSTRAINT litography_node_to_arc_litography_node_fk FOREIGN KEY (node_id) REFERENCES public.litography_node(id)
);

CREATE TABLE public.faction_members (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	actor_id int4 NULL,
	faction_id int4 NULL,
	actor_role varchar(255) NULL,
	relative_power int4 NULL,
	group_id int4 NULL,
	CONSTRAINT faction_members_pkey PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT faction_id FOREIGN KEY (faction_id) REFERENCES public.faction(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id)
);

CREATE TABLE public.history_actor (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	history_id int4 NULL,
	actor_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT history_actor_pkey PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT history_id FOREIGN KEY (history_id) REFERENCES public.history(id)
);

CREATE TABLE public.history_location (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	history_id int4 NULL,
	location_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT history_location_pkey PRIMARY KEY (id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT history_id FOREIGN KEY (history_id) REFERENCES public.history(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.litography_node_to_plot_section (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	node_id int4 NOT NULL,
	litography_plot_section_id int4 NOT NULL,
	CONSTRAINT litography_node_to_plot_section_pk PRIMARY KEY (id),
	CONSTRAINT litography_node_to_plot_section_litography_node_fk FOREIGN KEY (node_id) REFERENCES public.litography_node(id),
	CONSTRAINT litography_node_to_plot_section_litography_plot_section_fk FOREIGN KEY (litography_plot_section_id) REFERENCES public.litography_plot_section(id)
);

CREATE TABLE public.litography_note_to_actor (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	actor_id int4 NOT NULL,
	CONSTRAINT litography_note_to_actor_pk PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT litography_note_to_actor_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id)
);

CREATE TABLE public.litography_note_to_background (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	background_id int4 NOT NULL,
	CONSTRAINT litography_note_to_background_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_background_background_fk FOREIGN KEY (background_id) REFERENCES public.background(id),
	CONSTRAINT litography_note_to_background_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id)
);

CREATE TABLE public.litography_note_to_faction (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	faction_id int4 NOT NULL,
	CONSTRAINT litography_note_to_faction_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_faction_faction_fk FOREIGN KEY (faction_id) REFERENCES public.faction(id),
	CONSTRAINT litography_note_to_faction_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id)
);

CREATE TABLE public.litography_note_to_history (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	history_id int4 NOT NULL,
	CONSTRAINT litography_note_to_history_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_history_history_fk FOREIGN KEY (history_id) REFERENCES public.history(id),
	CONSTRAINT litography_note_to_history_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id)
);

CREATE TABLE public.litography_note_to_location (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	location_id int4 NOT NULL,
	CONSTRAINT litography_note_to_location_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_location_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id),
	CONSTRAINT litography_note_to_location_location__fk FOREIGN KEY (location_id) REFERENCES public.location_(id)
);

CREATE TABLE public.litography_note_to_object (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	object_id int4 NOT NULL,
	CONSTRAINT litography_note_to_object_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_object_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id),
	CONSTRAINT litography_note_to_object_object__fk FOREIGN KEY (object_id) REFERENCES public.object_(id)
);

CREATE TABLE public.litography_note_to_world_data (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	note_id int4 NOT NULL,
	world_data_id int4 NOT NULL,
	CONSTRAINT litography_note_to_world_data_pk PRIMARY KEY (id),
	CONSTRAINT litography_note_to_world_data_litography_notes_fk FOREIGN KEY (note_id) REFERENCES public.litography_notes(id),
	CONSTRAINT litography_note_to_world_data_world_data_fk FOREIGN KEY (world_data_id) REFERENCES public.world_data(id)
);

CREATE TABLE public.object_to_owner (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	object_id int4 NULL,
	actor_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT object_to_owner_pkey PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT object_id FOREIGN KEY (object_id) REFERENCES public.object_(id)
);

CREATE TABLE public.residents (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	actor_id int4 NULL,
	location_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT residents_pkey PRIMARY KEY (id),
	CONSTRAINT actor_id FOREIGN KEY (actor_id) REFERENCES public.actor(id),
	CONSTRAINT group_id FOREIGN KEY (group_id) REFERENCES public.lorekeeper_group(id),
	CONSTRAINT location_id FOREIGN KEY (location_id) REFERENCES public.location_(id)
);